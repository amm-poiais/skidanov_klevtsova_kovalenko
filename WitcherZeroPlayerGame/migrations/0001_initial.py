# Generated by Django 2.0 on 2017-12-19 14:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alchemy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('action_time', models.TimeField()),
                ('toxicity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AlchemyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('owned_by_school', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='DamagePerc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='DamageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('alchemy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Alchemy')),
            ],
        ),
        migrations.CreateModel(
            name='HavingAlchemy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('alchemy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Alchemy')),
            ],
        ),
        migrations.CreateModel(
            name='HavingArmor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('armor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Armor')),
            ],
        ),
        migrations.CreateModel(
            name='HavingWeapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ingridient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='LootFromMonster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.FloatField()),
                ('ingridient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Ingridient')),
            ],
        ),
        migrations.CreateModel(
            name='Monster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='MonsterClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MonsterDamageTypePerc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damage_perc', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.DamagePerc')),
                ('damage_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.DamageType')),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Monster')),
            ],
        ),
        migrations.CreateModel(
            name='MonsterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MonsterWeaponTypeRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damage_perc', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.DamagePerc')),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Monster')),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('owned_by_school', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='WeaponType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Witcher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('age', models.IntegerField()),
                ('status', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='WitcherSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='WitchersRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_witcher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='first', to='WitcherZeroPlayerGame.Witcher')),
                ('relationship', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Relation')),
                ('second_witcher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='second', to='WitcherZeroPlayerGame.Witcher')),
            ],
        ),
        migrations.AddField(
            model_name='witcher',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.WitcherSchool'),
        ),
        migrations.AddField(
            model_name='weapon',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.WitcherSchool'),
        ),
        migrations.AddField(
            model_name='weapon',
            name='weapon_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.WeaponType'),
        ),
        migrations.AddField(
            model_name='monsterweapontyperelation',
            name='weapon_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.WeaponType'),
        ),
        migrations.AddField(
            model_name='monster',
            name='monster_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.MonsterClass'),
        ),
        migrations.AddField(
            model_name='monster',
            name='monster_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.MonsterType'),
        ),
        migrations.AddField(
            model_name='lootfrommonster',
            name='monster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Monster'),
        ),
        migrations.AddField(
            model_name='havingweapon',
            name='weapon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Weapon'),
        ),
        migrations.AddField(
            model_name='havingweapon',
            name='witcher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Witcher'),
        ),
        migrations.AddField(
            model_name='havingarmor',
            name='witcher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Witcher'),
        ),
        migrations.AddField(
            model_name='havingalchemy',
            name='witcher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Witcher'),
        ),
        migrations.AddField(
            model_name='formula',
            name='ingridient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.Ingridient'),
        ),
        migrations.AddField(
            model_name='armor',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.WitcherSchool'),
        ),
        migrations.AddField(
            model_name='alchemy',
            name='alchemy_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.AlchemyType'),
        ),
        migrations.AddField(
            model_name='alchemy',
            name='damage_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='WitcherZeroPlayerGame.DamageType'),
        ),
        migrations.AlterUniqueTogether(
            name='witchersrelationship',
            unique_together={('first_witcher', 'second_witcher')},
        ),
        migrations.AlterUniqueTogether(
            name='monsterweapontyperelation',
            unique_together={('monster', 'weapon_type', 'damage_perc')},
        ),
        migrations.AlterUniqueTogether(
            name='monsterdamagetypeperc',
            unique_together={('monster', 'damage_type', 'damage_perc')},
        ),
        migrations.AlterUniqueTogether(
            name='lootfrommonster',
            unique_together={('monster', 'ingridient')},
        ),
        migrations.AlterUniqueTogether(
            name='havingweapon',
            unique_together={('witcher', 'weapon')},
        ),
        migrations.AlterUniqueTogether(
            name='havingarmor',
            unique_together={('witcher', 'armor')},
        ),
        migrations.AlterUniqueTogether(
            name='havingalchemy',
            unique_together={('alchemy', 'witcher')},
        ),
        migrations.AlterUniqueTogether(
            name='formula',
            unique_together={('ingridient', 'alchemy')},
        ),
    ]
